-- GUI to Lua
-- Version: 3.2

-- Instances:
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local UICorner_2 = Instance.new("UICorner")

-- Properties:
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 1.000
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.39259696, 0, 0.373115569, 0)
Frame.Size = UDim2.new(0, 179, 0, 60)

UICorner.Parent = Frame

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BackgroundTransparency = 0.700
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.11594753, 0, 0.129648343, 0)
TextLabel.Size = UDim2.new(0, 137, 0, 44)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Anti AFK by FRITE"
TextLabel.TextColor3 = Color3.fromRGB(186, 186, 186)
TextLabel.TextSize = 14

UICorner_2.Parent = TextLabel

-- Anti AFK Logic
local VirtualUser = game:GetService('VirtualUser')

game:GetService('Players').LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

-- Keep GUI alive on respawn
local player = game.Players.LocalPlayer

local function onCharacterAdded(character)
    -- Make sure the GUI is always in the PlayerGui
    ScreenGui.Parent = player:WaitForChild("PlayerGui")
end

-- Connect to the character added event
player.CharacterAdded:Connect(onCharacterAdded)

-- Initial connection
if player.Character then
    onCharacterAdded(player.Character)
end

-- Scripts:
local function EYBWYWQ_fake_script() -- Frame.LocalScript 
    local script = Instance.new('LocalScript', Frame)

    local frame = script.Parent -- The Frame you want to make draggable
    local userInputService = game:GetService("UserInputService")
    local isDragging = false
    local dragStart = nil
    local startPos = nil
    
    local function onInputBegan(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
            dragStart = input.Position
            startPos = frame.Position

            -- Connect to InputEnded event to stop dragging
            userInputService.InputEnded:Connect(function(endInput)
                if endInput.UserInputType == Enum.UserInputType.MouseButton1 then
                    isDragging = false
                end
            end)
        end
    end
    
    local function onInputChanged(input)
        if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end
    
    -- Connect input events
    userInputService.InputBegan:Connect(onInputBegan)
    userInputService.InputChanged:Connect(onInputChanged)
end

coroutine.wrap(EYBWYWQ_fake_script)()
